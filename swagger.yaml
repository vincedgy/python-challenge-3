openapi: 3.0.2
info:
  title: FastAPI
  description: |

    Une super api pour API HOUR !
  version: 0.1.0
paths:
  /personnes/:
    post:
      tags:
        - Personnes
      summary: Creer Une Personne
      description: Cr√©er une personne
      operationId: creer_une_personne_personnes__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /personnes:
    get:
      tags:
        - Personnes
      summary: Lister Les Personnes
      description: Lister les personnes
      operationId: lister_les_personnes_personnes_get
      parameters:
        - required: false
          schema:
            title: Skip
            type: integer
            default: 0
          name: skip
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
            default: 100
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Lister Les Personnes Personnes Get
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/personnes/{user_id}':
    get:
      tags:
        - Personnes
      summary: Chercher Une Personne
      description: Chercher une personne
      operationId: chercher_une_personne_personnes__user_id__get
      parameters:
        - required: true
          schema:
            title: User Id
            type: integer
          name: user_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/personnes/{user_id}/boissons/':
    post:
      tags:
        - Boissons
      summary: Associer Une Personne Et Une Boisson
      description: Associer une personne et une boisson
      operationId: associer_une_personne_et_une_boisson_personnes__user_id__boissons__post
      parameters:
        - required: true
          schema:
            title: User Id
            type: integer
          name: user_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /boissons:
    get:
      tags:
        - Boissons
      summary: Lister Les Boissons
      description: Lister les boissons
      operationId: lister_les_boissons_boissons_get
      parameters:
        - required: false
          schema:
            title: Skip
            type: integer
            default: 0
          name: skip
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
            default: 100
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Lister Les Boissons Boissons Get
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /:
    get:
      summary: Dit Bonjour
      description: 'Message de bienvenue :-)'
      operationId: dit_bonjour__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    Item:
      title: Item
      required:
        - title
        - id
        - owner_id
      type: object
      properties:
        title:
          title: Title
          type: string
        description:
          title: Description
          type: string
        id:
          title: Id
          type: integer
        owner_id:
          title: Owner Id
          type: integer
    ItemCreate:
      title: ItemCreate
      required:
        - title
      type: object
      properties:
        title:
          title: Title
          type: string
        description:
          title: Description
          type: string
    User:
      title: User
      required:
        - email
        - id
        - is_active
      type: object
      properties:
        email:
          title: Email
          type: string
        id:
          title: Id
          type: integer
        is_active:
          title: Is Active
          type: boolean
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/Item'
          default: []
    UserCreate:
      title: UserCreate
      required:
        - email
        - password
      type: object
      properties:
        email:
          title: Email
          type: string
        password:
          title: Password
          type: string
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            type: string
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
